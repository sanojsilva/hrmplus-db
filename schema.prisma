// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                 Int         @id @default(autoincrement())
  email              String      @unique
  username           String?
  password           String      @db.VarChar(255)
  resetPasswordToken String?     @map("reset_password_token")
  active             Boolean     @default(false)
  roles              UserRoles[]
  createdAt          DateTime    @default(now()) @map("created_at")
  updatedAt          DateTime    @updatedAt @map("updated_at")

  @@map("user")
}

model Permission {
  id        Int               @id @default(autoincrement())
  name      String            @db.VarChar(255)
  route     String            @db.VarChar(100)
  module    String            @db.VarChar(100)
  createdAt DateTime          @default(now()) @map("created_at")
  updatedAt DateTime          @updatedAt @map("updated_at")
  roles     RolePermissions[]

  @@map("permission")
}

model Role {
  id          Int               @id @default(autoincrement())
  name        String            @unique
  createdAt   DateTime          @default(now()) @map("created_at")
  updatedAt   DateTime          @updatedAt @map("updated_at")
  users       UserRoles[]
  permissions RolePermissions[]

  @@map("role")
}

model RolePermissions {
  roleId       Int        @map("role_id")
  role         Role       @relation(fields: [roleId], references: [id])
  permissionId Int        @map("permission_id")
  permission   Permission @relation(fields: [permissionId], references: [id])

  @@id([roleId, permissionId])
  @@map("role_permission")
}

model UserRoles {
  roleId Int  @map("role_id")
  role   Role @relation(fields: [roleId], references: [id])
  userId Int  @map("user_id")
  user   User @relation(fields: [userId], references: [id])

  @@id([roleId, userId])
  @@map("user_role")
}
